//usr/bin/env go-script "$0" "$@"; exit $?
// vi: ft=go

package main

import (
	"bufio"
	"fmt"
	"os"
	"os/exec"
)

// create pipeline with before and after side-by-side

// $ cat names
// alice
// bob
// mick

// $ cat names | sed 's/.*/\U&/'
// ALICE
// BOB
// MICK

// $ cat names | beside sed 's/.*/\U&/'
// alice   ALICE
// bob     BOB
// mick    MICK

func main() {
	if len(os.Args) < 2 {
		os.Exit(1)
	}

	command := exec.Command(os.Args[1], os.Args[2:]...)
	in, err := command.StdinPipe()
	cerr(err)
	out, err := command.StdoutPipe()
	cerr(err)

	cerr(command.Start())

	inScan := bufio.NewScanner(os.Stdin)
	outScan := bufio.NewScanner(out)
	for inScan.Scan() {
		left := inScan.Text()
		fmt.Fprintln(in, left)

		_ = outScan.Scan()
		right := outScan.Text()

		fmt.Printf("%s\t%s\n", left, right)
	}

	cerr(in.Close())
	cerr(command.Wait())
}

func cerr(err error) {
	if err != nil {
		panic(err)
	}
}
