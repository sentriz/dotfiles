//usr/bin/env go-script "$0" "$@"; exit $?
// vi: ft=go

package main

import (
	"bufio"
	"bytes"
	"fmt"
	"io"
	"os"
	"strings"
	"time"
)

func main() {
	var r io.Reader = os.Stdin
	if len(os.Args) > 1 {
		var buff bytes.Buffer
		for _, arg := range os.Args[1:] {
			fmt.Fprintln(&buff, arg)
		}
		r = &buff
	}

	for sc := bufio.NewScanner(r); sc.Scan(); {
		durStr := strings.TrimSpace(sc.Text())
		var dur time.Duration
		switch n := strings.Count(durStr, ":"); {
		case n > 0:
			var h, m, s int
			switch n {
			case 1:
				_, err := fmt.Sscanf(durStr, "%d:%d", &m, &s)
				cerr(err)
			case 2:
				_, err := fmt.Sscanf(durStr, "%d:%d:%d", &h, &m, &s)
				cerr(err)
			default:
				cerr(fmt.Errorf("unknown format %s", durStr))
			}
			dur = time.Duration(h)*(time.Hour) + time.Duration(m)*(time.Minute) + time.Duration(s)*(time.Second)
		default:
			var err error
			dur, err = time.ParseDuration(durStr)
			cerr(err)
		}
		fmt.Println(dur.Seconds())
	}
}

func cerr(err error) {
	if err != nil {
		panic(err)
	}
}
