#!/usr/bin/env fish

# senan kelly
# 2017-
# usage: screenshot [upload] [select]

if not which grim > /dev/null 2>&1
    echo "grim required" >&2
    echo "https://github.com/emersion/grim" >&2
    exit 1
end

if not which slurp > /dev/null 2>&1
    echo "slurp required" >&2
    echo "https://github.com/emersion/slurp" >&2
    exit 1
end

if not notify-send --help 2>&1 | grep -Eq -- --print-id
    echo "notify-send with `--print-id` and `--replace-id` required" >&2
    echo "https://aur.archlinux.org/packages/?O=0&K=libnotify-id" >&2
    exit 1
end

set -g screen_dir "$DOTS_SCREENSHOTS_DIR"
set -g remote_host "$DOTS_SCREENSHOTS_REMOTE"
set -g grim_options
set -g notify_id (random 500 1000)

function __notify
    set notify_id (notify-send \
        --print-id \
        --replace-id "$notify_id" \
        $argv
    )
end

if contains 'select' $argv
    __notify 'screenshot' 'select an area'
    set -a grim_options '-g '(slurp)
end

set -g filename "$screen_dir/"(date '+%Y%m%d_%H%M%S.png')
grim $grim_options "$filename"
__notify 'screenshot' 'taken '(basename $filename)

# add to socr database
# see https://github.com/sentriz/socr
socr add "$filename" &

contains 'upload' $argv; or exit
set -l credentials (printf \
    '%s:%s' \
    (secret image_username) \
    (secret image_password)
)
set -l remote (curl -s \
    "$remote_host/upload" \
    --user "$credentials" \
    --form "img=@$filename"
)
echo "$remote_host/$remote" | wl-copy
__notify 'screenshot' 'link in clipboard'
