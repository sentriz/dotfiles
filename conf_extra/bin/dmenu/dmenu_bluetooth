#!/usr/bin/env bash

if ! which bluetoothctl >/dev/null 2>&1; then
    echo "please install bluez-utils" >&2
    exit 1
fi

lower() { tr '[:upper:]' '[:lower:]'; }
notify() { notify-send.sh --replace-file "/tmp/dmenu_bluetooth_replace" "$@"; }

notify_cmd() {
    heading="$1"
    shift
    notify "$heading" # body will appear to be filled
    if ! out=$("$@"); then
        notify "$heading" "failed: $out"
        return 1
    fi
    notify "$heading" "done"
}

devices="$(bluetoothctl devices | lower)"
device="$(printf "%s\n" "$devices" "disconnect" | dmenu_custom -p 'bluetooth')"
test -z "$device" && exit 1

device_name="$(cut -d ' ' -f 3- <<< "$device")"
device_mac="$(awk '{print $2}' <<< "$device")"

if [ "$device" = "disconnect" ]; then
    notify_cmd "disconnecting" \
        bluetoothctl disconnect
    exit
fi

notify_cmd "powering on" \
    bluetoothctl power on

bluetoothctl agent on
bluetoothctl default-agent

notify_cmd "connecting to $device_name" \
    bluetoothctl connect "$device_mac"
