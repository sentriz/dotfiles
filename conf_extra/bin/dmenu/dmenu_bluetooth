#!/usr/bin/env bash

if ! type -p bluetoothctl >/dev/null; then
    echo "please install bluez-utils" >&2
    exit 1
fi

lower() { tr '[:upper:]' '[:lower:]'; }
notify() { notify-send.sh --replace-file "/tmp/dmenu_bluetooth_replace" "$@"; }

notify_cmd() {
    # $ <heading> <to filter>
    notify "$1"
    if ! out="$(eval "$2")"; then
        notify "$1" "failed: $out"
        return 1
    fi
    notify "$1" "done"
}

devices="$(bluetoothctl devices | lower)"
device="$(printf "%s\n" "$devices" "disconnect" | dmenu_custom -p 'bluetooth')"
test -z "$device" && exit 1

device_mac="$(cut -d ' ' -f 2 <<<"$device")"
device_name="$(cut -d ' ' -f 3- <<<"$device")"

if [ "$device" = "disconnect" ]; then
    # force true here, we don't care if we're not connected currently
    notify_cmd "disconnecting" "bluetoothctl disconnect || true"
    exit
fi

notify_cmd "powering on" "bluetoothctl power on"
notify_cmd "trusting $device_name" "bluetoothctl trust $device_mac"
notify_cmd "setting pairible" "bluetoothctl pairable on"
notify_cmd "pairing $device_name" "bluetoothctl pair $device_mac || true"
notify_cmd "connecting to $device_name" "bluetoothctl connect $device_mac"
notify_cmd "connecting to $device_name" "bluetoothctl connect $device_mac"
