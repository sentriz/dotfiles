#!/usr/bin/env bash

# senan kelly 2019
#
# recommended: wl-clipboard-rs instead of wl-clipboard
# (wc-clipboard seems to grab keyboard focus for me)
#
# to start the deamon (listens for new items in the clipboard):
# $ ./cliphist listen
#
# to copy an old item to your clipboard example:
# $ ./cliphist select | dmenu -l 10 | ./cliphist copy

if [[ "$#" -ne 1 ]]; then
    echo "usage $0 [listen|select|copy]" >&2
    exit 1
fi

if ! which "wl-copy" > /dev/null 2>&1; then
    echo "please install wl-clipboard" >&2
    exit 1
fi

hist_dir=~/".local/share"
hist_path="$hist_dir/cliphist"
hist_sep='â€¦'
last_copy=

function __listen_body () {
    copy="$(wl-paste --type text --primary 2> /dev/null)"
    if [[ "$copy" != "$last_copy" ]]; then
        echo "$copy"
        return
    fi
    copy="$(wl-paste --type text 2> /dev/null)"
    [[ "$copy" != "$last_copy" ]] && echo "$copy"
}

function __listen () {
    mkdir -p "$hist_dir" > /dev/null 2>&1
    rm "$hist_path" > /dev/null 2>&1
    while :; do
        new="$(__listen_body)"
        if [[ -z "$new" ]]; then
            sleep 1.2
            continue
        fi
        wl-copy --trim-newline <<< "$new"
        wl-copy --trim-newline --primary <<< "$new"
        paste --serial --delimiters "$hist_sep" - <<< "$new" >> "$hist_path"
        last_copy="$new"
        sleep 1.2
    done
}

function __select () {
    tac "$hist_path"
}

function __copy () {
    to_copy="$(cat - | tr "$hist_sep" '\n')"
    [[ -z "$to_copy" ]] && return
    wl-copy --foreground --trim-newline <<< "$to_copy"
    wl-copy --foreground --trim-newline --primary <<< "$to_copy"
}

case "$1" in
    listen) __listen ;;
    select) __select ;;
    copy)   __copy ;;
    *)      echo "invalid command \"$1\"" >&2
            exit 1 ;;
esac
