#!/usr/bin/env python3

# Senan Kelly 2016
# $ pip install --user python-mpd2
# $ echo 'execute_on_song_change = show_art ~/music localhost 6600' >> .ncmpcpp/config

from PIL import Image
from mpd import MPDClient
from contextlib import suppress
import os
import subprocess
import sys


def get_mpd_path(host, port):
    client = MPDClient()
    client.connect(host, port)
    mpd_path = client.currentsong()['file']
    client.close()
    client.disconnect()
    return os.path.dirname(mpd_path)


def get_art_file(mpd_root, mpd_path):
    full_path = os.path.join(mpd_root, mpd_path)
    for file in os.listdir(full_path):
        if 'folder.' in file:
            return os.path.join(full_path, file)


def show_art(art_file, size=252):
    term_width = int(subprocess.getoutput("tput cols")) * 7
    term_height = int(subprocess.getoutput("tput lines")) * 13

    x_pos = term_width - size - 2
    y_pos = term_height - size - 28

    format_sting = "0;1;{x_pos};{y_pos};{size};{size};;;;;{art_file}\n4;\n3;"
    format_sting = format_sting.format(**locals())
    img_format = subprocess.Popen(
        ["echo", format_sting], stdout=subprocess.PIPE)
    img_show = subprocess.Popen(
        ["/usr/lib/w3m/w3mimgdisplay"], stdin=img_format.stdout, stdout=subprocess.DEVNULL)


if __name__ == '__main__':

    if len(sys.argv) != 4:
        print('args should be <mpd_root> <host> <port>')
        sys.exit(1)

    mpd_root, host, port = sys.argv[1:]
    with suppress(Exception):
        mpd_path = get_mpd_path(host, port)
        art_file = get_art_file(mpd_root, mpd_path)
        show_art(art_file)
        show_art(art_file)
